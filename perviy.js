DB_PASSWORD -- типы и классы
DB_USER -- значения известны до запуска приложения и не меняться
camelCase -- Все остальные переменные

Обьявления переменных
Let, const(рекомендуется использовать) var (нерекомендуеться)

Разницыа между let i const,

let a      --в этом примере мы создали перерменную и второй командой присвоили ей значения и переменные
можно переписывать)
a = true

const c = 10 (одной командой создали и присвоили значение переменной, переписывать нельзя )

Примитивные типы:

1. String (Строка) -- 
2. Boolean (логический) (имеет значени тру или фолс)
3. Number (число) (0 -5 10 1.5 1.25)
4. null (имеет значени ноль)(используеться тогда когда вы хотите показать что значение в этой переменной отсутсвует (спецаиально)
5. Undefined (только 1 значение , подразумевает что значение у той или иной переменной нету)(по дефолту)
6. Symbol (символ)(можно создавать уникальные значения , используется редко)

Ссылочный тип 
Object (обьект) -- 
// пример ссылочного типа данных
const objectA = {
    a: 10,
    b: true
    c: 'abc'
}

const copyOfA = objectA

copyOfA.a = 20 (меняем свойство а в переменной objectA через ссылку в copyOfA )
copyOfA.c = 'abc' (добавляем в objectA новое свойство с которое будет содержать c = 'abc')

Статическая и динамическая типизации:

String a = 'abc'    в этих двух строчках стринг и инт стоят для того что бы сразу
int b = 10          обьявили тип переменных
b = 'xyz'


Плохой пример построения.
function a() {
    console.log('Hey there')
 }
 a()
 a = 10
 a()  

Хороший пример Const для обьявления переменных 

const a = () => {
    console.log('Hey there')
 }

 a() // 'hey there' 

 a = 10 // tyoeError: Assigment to constant variable

 a() 
 
 












